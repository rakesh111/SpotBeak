

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class Spot : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Spot entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Spot()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Spot(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Spot> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Spot.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spot_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spot_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientId
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.ClientId);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.ClientId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MapX
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapX);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapX, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapX_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapX_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapX_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MapY
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapY);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapY, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapY_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapY_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapY_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MapZ
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapZ);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapZ, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapZ_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapZ_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MapZ_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Client Client
        {
            get
            {
                return global::LightSwitchApplication.Spot.DetailsClass.GetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client);
            }
            set
            {
                global::LightSwitchApplication.Spot.DetailsClass.SetValue(this, global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Client_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Spot,
                global::LightSwitchApplication.Spot.DetailsClass,
                global::LightSwitchApplication.Spot.DetailsClass.IImplementation,
                global::LightSwitchApplication.Spot.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>.Entry
                __SpotEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>.Entry(
                    global::LightSwitchApplication.Spot.DetailsClass.__Spot_CreateNew,
                    global::LightSwitchApplication.Spot.DetailsClass.__Spot_Created,
                    global::LightSwitchApplication.Spot.DetailsClass.__Spot_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Spot __Spot_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Spot> es)
            {
                return new global::LightSwitchApplication.Spot(es);
            }
            private static void __Spot_Created(global::LightSwitchApplication.Spot e)
            {
                e.Spot_Created();
            }
            private static bool __Spot_AllowSaveWithErrors(global::LightSwitchApplication.Spot e)
            {
                bool result = false;
                e.Spot_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Spot.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string> ClientId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.ClientId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int> MapX
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapX) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int> MapY
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapY) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int> MapZ
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.MapZ) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client> Client
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string ClientId { get; set; }
                new int MapX { get; set; }
                new int MapY { get; set; }
                new int MapZ { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Client { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string>.Entry
                    ClientId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string>.Entry(
                        "ClientId",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._ClientId_OnValueChanged);
                private static void _ClientId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientId, sf);
                }
                private static bool _ClientId_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.ClientId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientId_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientId_Validate(r);
                }
                private static string _ClientId_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientId;
                }
                private static void _ClientId_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientId = v;
                }
                private static void _ClientId_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.ClientId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry
                    MapX = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry(
                        "MapX",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapX_OnValueChanged);
                private static void _MapX_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._MapX, sf);
                }
                private static bool _MapX_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.MapX_IsReadOnly(ref result);
                    return result;
                }
                private static void _MapX_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MapX_Validate(r);
                }
                private static int _MapX_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.MapX;
                }
                private static void _MapX_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MapX = v;
                }
                private static void _MapX_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.MapX_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry
                    MapY = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry(
                        "MapY",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapY_OnValueChanged);
                private static void _MapY_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._MapY, sf);
                }
                private static bool _MapY_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.MapY_IsReadOnly(ref result);
                    return result;
                }
                private static void _MapY_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MapY_Validate(r);
                }
                private static int _MapY_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.MapY;
                }
                private static void _MapY_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MapY = v;
                }
                private static void _MapY_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.MapY_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry
                    MapZ = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Entry(
                        "MapZ",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._MapZ_OnValueChanged);
                private static void _MapZ_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._MapZ, sf);
                }
                private static bool _MapZ_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.MapZ_IsReadOnly(ref result);
                    return result;
                }
                private static void _MapZ_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MapZ_Validate(r);
                }
                private static int _MapZ_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.MapZ;
                }
                private static void _MapZ_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MapZ = v;
                }
                private static void _MapZ_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.MapZ_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client>.Entry
                    Client = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client>.Entry(
                        "Client",
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_Stub,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_ComputeIsReadOnly,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_Validate,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_GetCoreImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_GetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_SetImplementationValue,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_Refresh,
                        global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties._Client_OnValueChanged);
                private static void _Client_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Spot.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client>.Data> c, global::LightSwitchApplication.Spot.DetailsClass d, object sf)
                {
                    c(d, ref d._Client, sf);
                }
                private static bool _Client_ComputeIsReadOnly(global::LightSwitchApplication.Spot e)
                {
                    bool result = false;
                    e.Client_IsReadOnly(ref result);
                    return result;
                }
                private static void _Client_Validate(global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Client_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Client_GetCoreImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.ImplementationEntity.Client;
                }
                private static global::LightSwitchApplication.Client _Client_GetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Client, global::LightSwitchApplication.Client.DetailsClass>(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client, ref d._Client);
                }
                private static void _Client_SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass d, global::LightSwitchApplication.Client v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client, ref d._Client, (i, ev) => i.Client = ev, v);
                }
                private static void _Client_Refresh(global::LightSwitchApplication.Spot.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Spot.DetailsClass.PropertySetProperties.Client, ref d._Client);
                }
                private static void _Client_OnValueChanged(global::LightSwitchApplication.Spot e)
                {
                    e.Client_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, string>.Data _ClientId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data _MapX;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data _MapY;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, int>.Data _MapZ;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Spot, global::LightSwitchApplication.Spot.DetailsClass, global::LightSwitchApplication.Client>.Data _Client;
            
        }
    
        #endregion
    }
    
    #endregion
}
