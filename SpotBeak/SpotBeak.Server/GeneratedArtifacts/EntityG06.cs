

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
    public sealed partial class CardAssignment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the CardAssignment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CardAssignment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CardAssignment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CardAssignment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.CardAssignment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CardId
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.CardId);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.CardId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SpotId
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.SpotId);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.SpotId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.FromDate);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.FromDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FromDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime ToDate
        {
            get
            {
                return global::LightSwitchApplication.CardAssignment.DetailsClass.GetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.ToDate);
            }
            set
            {
                global::LightSwitchApplication.CardAssignment.DetailsClass.SetValue(this, global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.ToDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ToDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ToDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ToDate_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.CardAssignment,
                global::LightSwitchApplication.CardAssignment.DetailsClass,
                global::LightSwitchApplication.CardAssignment.DetailsClass.IImplementation,
                global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>.Entry
                __CardAssignmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>.Entry(
                    global::LightSwitchApplication.CardAssignment.DetailsClass.__CardAssignment_CreateNew,
                    global::LightSwitchApplication.CardAssignment.DetailsClass.__CardAssignment_Created,
                    global::LightSwitchApplication.CardAssignment.DetailsClass.__CardAssignment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.CardAssignment __CardAssignment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.CardAssignment> es)
            {
                return new global::LightSwitchApplication.CardAssignment(es);
            }
            private static void __CardAssignment_Created(global::LightSwitchApplication.CardAssignment e)
            {
                e.CardAssignment_Created();
            }
            private static bool __CardAssignment_AllowSaveWithErrors(global::LightSwitchApplication.CardAssignment e)
            {
                bool result = false;
                e.CardAssignment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string> CardId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.CardId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string> SpotId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.SpotId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime> FromDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.FromDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime> ToDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties.ToDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new byte[] RowVersion { get; set; }
                new string CardId { get; set; }
                new string SpotId { get; set; }
                new global::System.DateTime FromDate { get; set; }
                new global::System.DateTime ToDate { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Entry
                    CardId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Entry(
                        "CardId",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._CardId_OnValueChanged);
                private static void _CardId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._CardId, sf);
                }
                private static bool _CardId_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.CardId_IsReadOnly(ref result);
                    return result;
                }
                private static void _CardId_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CardId_Validate(r);
                }
                private static string _CardId_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.CardId;
                }
                private static void _CardId_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CardId = v;
                }
                private static void _CardId_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.CardId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Entry
                    SpotId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Entry(
                        "SpotId",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._SpotId_OnValueChanged);
                private static void _SpotId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._SpotId, sf);
                }
                private static bool _SpotId_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.SpotId_IsReadOnly(ref result);
                    return result;
                }
                private static void _SpotId_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SpotId_Validate(r);
                }
                private static string _SpotId_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.SpotId;
                }
                private static void _SpotId_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SpotId = v;
                }
                private static void _SpotId_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.SpotId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Entry
                    FromDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Entry(
                        "FromDate",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._FromDate_OnValueChanged);
                private static void _FromDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._FromDate, sf);
                }
                private static bool _FromDate_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.FromDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _FromDate_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FromDate_Validate(r);
                }
                private static global::System.DateTime _FromDate_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.FromDate;
                }
                private static void _FromDate_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.FromDate = global::LightSwitchApplication.CardAssignment.DetailsClass.TruncateDate(v);
                }
                private static void _FromDate_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.FromDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Entry
                    ToDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Entry(
                        "ToDate",
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_Stub,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_Validate,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_GetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_SetImplementationValue,
                        global::LightSwitchApplication.CardAssignment.DetailsClass.PropertySetProperties._ToDate_OnValueChanged);
                private static void _ToDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.CardAssignment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.CardAssignment.DetailsClass d, object sf)
                {
                    c(d, ref d._ToDate, sf);
                }
                private static bool _ToDate_ComputeIsReadOnly(global::LightSwitchApplication.CardAssignment e)
                {
                    bool result = false;
                    e.ToDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ToDate_Validate(global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ToDate_Validate(r);
                }
                private static global::System.DateTime _ToDate_GetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d)
                {
                    return d.ImplementationEntity.ToDate;
                }
                private static void _ToDate_SetImplementationValue(global::LightSwitchApplication.CardAssignment.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.ToDate = global::LightSwitchApplication.CardAssignment.DetailsClass.TruncateDate(v);
                }
                private static void _ToDate_OnValueChanged(global::LightSwitchApplication.CardAssignment e)
                {
                    e.ToDate_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Data _CardId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, string>.Data _SpotId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Data _FromDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.CardAssignment, global::LightSwitchApplication.CardAssignment.DetailsClass, global::System.DateTime>.Data _ToDate;
            
        }
    
        #endregion
    }
    
    #endregion
}
