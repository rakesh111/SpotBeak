//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.3.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Inserted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updating(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Updated(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleting(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Deleted(global::LightSwitchApplication.Client entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Validate(global::LightSwitchApplication.Client entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Clients_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Inserting(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Inserted(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Updating(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Updated(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Deleting(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Deleted(global::LightSwitchApplication.Hub entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Validate(global::LightSwitchApplication.Hub entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Hubs_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hub, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Inserting(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Inserted(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Updating(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Updated(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Deleting(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Deleted(global::LightSwitchApplication.Spot entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Validate(global::LightSwitchApplication.Spot entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Spots_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Spot, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Inserting(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Inserted(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Updating(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Updated(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Deleting(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Deleted(global::LightSwitchApplication.Card entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Validate(global::LightSwitchApplication.Card entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cards_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Card, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Inserting(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Inserted(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Updating(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Updated(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Deleting(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Deleted(global::LightSwitchApplication.SpotAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Validate(global::LightSwitchApplication.SpotAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SpotAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SpotAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Inserting(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Inserted(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Updating(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Updated(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Deleting(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Deleted(global::LightSwitchApplication.CardAssignment entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Validate(global::LightSwitchApplication.CardAssignment entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CardAssignments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CardAssignment, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>
                __ClientsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Client>(
                    "Clients",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Clients_Filter);
            private static bool __Clients_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanInsert(ref result);
                return result;
            }
            private static bool __Clients_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanUpdate(ref result);
                return result;
            }
            private static bool __Clients_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanDelete(ref result);
                return result;
            }
            private static bool __Clients_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Clients_CanRead(ref result);
                return result;
            }
            private static void __Clients_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserting(e);
            }
            private static void __Clients_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Inserted(e);
            }
            private static void __Clients_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updating(e);
            }
            private static void __Clients_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Updated(e);
            }
            private static void __Clients_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleting(e);
            }
            private static void __Clients_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e)
            {
                d.Clients_Deleted(e);
            }
            private static void __Clients_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Client e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Clients_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> __Clients_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Client, bool>> filter = null;
                d.Clients_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hub>
                __HubsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Hub>(
                    "Hubs",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Hubs_Filter);
            private static bool __Hubs_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hubs_CanInsert(ref result);
                return result;
            }
            private static bool __Hubs_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hubs_CanUpdate(ref result);
                return result;
            }
            private static bool __Hubs_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hubs_CanDelete(ref result);
                return result;
            }
            private static bool __Hubs_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Hubs_CanRead(ref result);
                return result;
            }
            private static void __Hubs_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Inserting(e);
            }
            private static void __Hubs_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Inserted(e);
            }
            private static void __Hubs_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Updating(e);
            }
            private static void __Hubs_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Updated(e);
            }
            private static void __Hubs_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Deleting(e);
            }
            private static void __Hubs_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e)
            {
                d.Hubs_Deleted(e);
            }
            private static void __Hubs_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Hub e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Hubs_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hub, bool>> __Hubs_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Hub, bool>> filter = null;
                d.Hubs_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Spot>
                __SpotsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Spot>(
                    "Spots",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Spots_Filter);
            private static bool __Spots_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Spots_CanInsert(ref result);
                return result;
            }
            private static bool __Spots_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Spots_CanUpdate(ref result);
                return result;
            }
            private static bool __Spots_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Spots_CanDelete(ref result);
                return result;
            }
            private static bool __Spots_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Spots_CanRead(ref result);
                return result;
            }
            private static void __Spots_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Inserting(e);
            }
            private static void __Spots_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Inserted(e);
            }
            private static void __Spots_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Updating(e);
            }
            private static void __Spots_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Updated(e);
            }
            private static void __Spots_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Deleting(e);
            }
            private static void __Spots_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e)
            {
                d.Spots_Deleted(e);
            }
            private static void __Spots_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Spot e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Spots_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Spot, bool>> __Spots_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Spot, bool>> filter = null;
                d.Spots_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Card>
                __CardsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Card>(
                    "Cards",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Cards_Filter);
            private static bool __Cards_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cards_CanInsert(ref result);
                return result;
            }
            private static bool __Cards_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cards_CanUpdate(ref result);
                return result;
            }
            private static bool __Cards_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cards_CanDelete(ref result);
                return result;
            }
            private static bool __Cards_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Cards_CanRead(ref result);
                return result;
            }
            private static void __Cards_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Inserting(e);
            }
            private static void __Cards_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Inserted(e);
            }
            private static void __Cards_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Updating(e);
            }
            private static void __Cards_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Updated(e);
            }
            private static void __Cards_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Deleting(e);
            }
            private static void __Cards_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e)
            {
                d.Cards_Deleted(e);
            }
            private static void __Cards_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Card e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Cards_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Card, bool>> __Cards_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Card, bool>> filter = null;
                d.Cards_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SpotAssignment>
                __SpotAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SpotAssignment>(
                    "SpotAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SpotAssignments_Filter);
            private static bool __SpotAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SpotAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __SpotAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SpotAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __SpotAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SpotAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __SpotAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SpotAssignments_CanRead(ref result);
                return result;
            }
            private static void __SpotAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Inserting(e);
            }
            private static void __SpotAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Inserted(e);
            }
            private static void __SpotAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Updating(e);
            }
            private static void __SpotAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Updated(e);
            }
            private static void __SpotAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Deleting(e);
            }
            private static void __SpotAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e)
            {
                d.SpotAssignments_Deleted(e);
            }
            private static void __SpotAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SpotAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SpotAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SpotAssignment, bool>> __SpotAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SpotAssignment, bool>> filter = null;
                d.SpotAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CardAssignment>
                __CardAssignmentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CardAssignment>(
                    "CardAssignments",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CardAssignments_Filter);
            private static bool __CardAssignments_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CardAssignments_CanInsert(ref result);
                return result;
            }
            private static bool __CardAssignments_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CardAssignments_CanUpdate(ref result);
                return result;
            }
            private static bool __CardAssignments_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CardAssignments_CanDelete(ref result);
                return result;
            }
            private static bool __CardAssignments_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CardAssignments_CanRead(ref result);
                return result;
            }
            private static void __CardAssignments_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Inserting(e);
            }
            private static void __CardAssignments_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Inserted(e);
            }
            private static void __CardAssignments_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Updating(e);
            }
            private static void __CardAssignments_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Updated(e);
            }
            private static void __CardAssignments_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Deleting(e);
            }
            private static void __CardAssignments_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e)
            {
                d.CardAssignments_Deleted(e);
            }
            private static void __CardAssignments_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CardAssignment e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CardAssignments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CardAssignment, bool>> __CardAssignments_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CardAssignment, bool>> filter = null;
                d.CardAssignments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
